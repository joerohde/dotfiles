#!/usr/bin/env bash
set -e
#set -x
export UNAME
UNAME="$(uname)"

command -v gdate >/dev/null && date() { gdate "$@"; } && export -f date
command -v gstat >/dev/null && stat() { gstat "$@"; } && export -f stat

PIP_INSTALL='pip3 install --disable-pip-version-check'

function main {
    if [[ "$1" == "-u" || "$1" == "--update" ]]; then
        UPDATE_ONLY="true"
        shift
    fi

    CONFIG="install.conf.yaml"
    DOTBOT_DIR="dotbot"
    DOTBOT_BIN="bin/dotbot"
    BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    cd "${BASEDIR}"
    git fetch -q
    if [[ -z ${RESTART} ]]; then
        git diff --quiet HEAD:install origin/master:install || RESTART=true
    fi
    git pull -q
    [[ "${RESTART}" == "true" ]] && RESTART=false exec ${BASH_SOURCE[0]}

    git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
    git submodule update --init --recursive "${DOTBOT_DIR}"

    if [[ "${UPDATE_ONLY}" != "true" ]]; then
        install python3-pip pip3
        install coreutils dircolors
        install tmux tmux
        # install aws awscli
        # some installs can't be abstracteed away
        case "${UNAME}" in
        *Darwin*)
            # hack to try and use local installed bash because the builtin is old
            # probably won't work becasue the other bash won't be in /etc/shells
            { [[ $(dscl . -read ~/ UserShell | sed -e 's|.* /|/|') =~ ^/bin/bash$ ]]; } &&
                { sudo chsh -s "$(command -v bash)" "$(whoami)"; }

            install bat
            install font-source-code-pro
            install font-fira-code
            install font-consolas-for-powerline
            install pygments pygmentize
            install pyyaml "" "${PIP_INSTALL} pyyaml"
            ;;
        *Linux*)
            install pygments pygmentize "${PIP_INSTALL} pygments"
            install bat batcat
            ;;
        *)
            echo "install: unknown platform - $(uname)"
            ;;
        esac
    fi

    # Will access ${UNAME} in install.conf.yaml
    "${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -q -d "${BASEDIR}" -c "${CONFIG}" "${@}"
}

function uptodate() {
    local UPDATE_FILE UPDATED_SINCE_DAYS UPDATED_SINCE_SECONDS STAT_UPDATE NOW

    UPDATE_FILE="$1"
    UPDATED_SINCE_DAYS="${2:-28}"
    NOW=$(date +%s)

    [[ -r "${UPDATE_FILE}" ]] || return 1

    UPDATED_SINCE_SECONDS=$((60 * 60 * 24 * UPDATED_SINCE_DAYS))
    UPDATED_SINCE_SECONDS=$((NOW - UPDATED_SINCE_SECONDS))

    STAT_UPDATE=$(stat --format=%Z "${UPDATE_FILE}")

    ((STAT_UPDATE != 0 && STAT_UPDATE > UPDATED_SINCE_SECONDS))
}

function update_brew() {
    brew update
    brew analytics off
}

function install_brew() {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    update_brew
}

function install() {
    local PACKAGE BINARY INSTALL_CMD
    PACKAGE="$1"
    BINARY="$2"
    TEST_INSTALL='command -v "${BINARY}"'

    case "${UNAME}" in
    *Darwin*)
        INSTALL_CMD="${3:-brew install -q -f}"
        command -v "brew" >/dev/null || install_brew
        uptodate "$(brew --cache)/api/formula.jws.json" || update_brew
        # shellcheck disable=SC2016
        [[ $BINARY == "" ]] && TEST_INSTALL='brew list ${PACKAGE}'
        # shellcheck disable=SC2016
        [[ $INSTALL_CMD == *"pip3 install"* ]] && TEST_INSTALL='pip3 show --disable-pip-version-check ${PACKAGE}'
        ;;
    *Linux*)
        INSTALL_CMD="${3:-sudo apt-get install -qq -y}"
        # hack - if apt doesnt' know about pip, it may be a mew container, never updated
        { [[ -n $(apt-cache search --names-only '^python3-pip$') ]] && uptodate /var/cache/apt; } ||
            {
                echo Running apt-get update
                sudo apt-get -qq -y update
            }
        ;;
    *)
        echo "install: unknown platform - $(uname)"
        return
        ;;
    esac

    eval "${TEST_INSTALL}" >/dev/null ||
        {
            echo "Installing: ${PACKAGE}..."
            ${INSTALL_CMD} "${PACKAGE}"
        }
}

export DEBIAN_FRONTEND=noninteractive
main "$@"
command -v "pwsh" >/dev/null && pwsh -c update
