#!/bin/bash

if [ -n "$ZSH_VERSION" ]; then
function printkv() {
    printf '%40s => %s\n' "${(P@kv)1}"
}

function gvm() {
    if [ -n "$1" ]; then
        if [ -d "$HOME/sdk/go${1}/bin" ]; then
            # don't worry about GOROOT. Anything not using $(go env) is broken.
            prepend_path "$HOME/sdk/go${1}/bin"
        else
            echo "Go version $1 not installed"
            echo "Maybe Try: go install golang.org/dl/go${1}@latest"
        fi
    fi
}

fi

function cred() {
    if [ "$1" == "" ]; then
        echo "usage: cred <MFA>"
        return
    fi
    perform get-aws-keys jrohde "$1" hbogo
}

function linetime() {
    "$@" | while IFS= read -r line; do printf '[%s] %s\n' "$(date '+%Y-%m-%d %H:%M:%S')" "$line"; done
}

function psport() {
    lsof -n -i TCP:"$*"
}

function pslisten() {
    lsof -PiTCP -sTCP:LISTEN
}

function hdir() {
    gls -lht "$@" | head -12
}

function path() { echo $PATH | perl -pe 's/:/\n/g'; }

function dbg() {
    if [ "$1" == "" ]; then
        echo "usage: dbg <partial process name>"
        return
    fi
    gdb -p "$(pgrep -i -n "$1")"
}

function _fromalias() {
    alias "$1" | awk -F "'" '{ print $2; }'
}

function _lessdir() {
    local cmd
    cmd=$(_fromalias dir)

    if [[ "$#" == "1" ]] && [[ -f "$1" ]] && [[ -r "$1" ]]; then
        cmd=$(_fromalias more)
    fi
    eval "$cmd" "$@"
}

function code() {
    [[ $(declare -F lazynvm) =~ "lazynvm" ]] && lazynvm
    #"$HOME/.local/bin/vscode" --debug "$@"
    NODE_OPTIONS="" env code "$@"
}

function findnew() {
    local LINES FIND
    LINES=30
    if [ -n "$1" ]; then
        LINES="$1"
        shift
    fi
    FIND="find"
    command -v gfind >/dev/null && FIND="gfind"

    ${FIND} . -type f -printf '%TY-%Tm-%Td %TT %p\n' | sort -r | head -n $LINES | sed -e 's/\.0*//'
}

function ghclone() {
    local REPO
    REPO="$1"
    [[ "$REPO" != */* ]] && REPO="joerohde/$1"
    git clone "git@github.com:${REPO}.git"
}

function manswitch() {
    man $1 | ba -p "^ +$2"
}

function fetch() {
    BRANCH="${1:-main}"
    echo -n "Fetching ${BRANCH}..."
    git fetch origin "${BRANCH}:${BRANCH}"
}

function manpdf() {
    # man -t "$@" | ps2pdf - | open -f -a /Applications/Preview.app
    man -t "$@" | open -f -a /Applications/Preview.app
}

function _git_cd() {
    _git_checkout
    #compopt +o default
}

# rebase
function grb() {
    git rebase "origin/$1" -i
}

function glog() {
    git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
}

function goos() {
    GOOS='' GOARCH='' GOPRIVATE=github.com/wbd-streaming "$@"
}

function god() {
    goos go "$@"
}
